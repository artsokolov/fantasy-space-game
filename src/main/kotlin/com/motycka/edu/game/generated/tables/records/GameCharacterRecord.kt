/*
 * This file is generated by jOOQ.
 */
package com.motycka.edu.game.generated.tables.records


import com.motycka.edu.game.generated.tables.GameCharacter

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class GameCharacterRecord() : UpdatableRecordImpl<GameCharacterRecord>(GameCharacter.GAME_CHARACTER) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var accountId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var name: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var `class`: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var health: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var attack: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var experience: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    open var defense: Int?
        set(value): Unit = set(7, value)
        get(): Int? = get(7) as Int?

    open var stamina: Int?
        set(value): Unit = set(8, value)
        get(): Int? = get(8) as Int?

    open var healing: Int?
        set(value): Unit = set(9, value)
        get(): Int? = get(9) as Int?

    open var mana: Int?
        set(value): Unit = set(10, value)
        get(): Int? = get(10) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised GameCharacterRecord
     */
    constructor(id: Long? = null, accountId: Long? = null, name: String? = null, `class`: String? = null, health: Int? = null, attack: Int? = null, experience: Int? = null, defense: Int? = null, stamina: Int? = null, healing: Int? = null, mana: Int? = null): this() {
        this.id = id
        this.accountId = accountId
        this.name = name
        this.`class` = `class`
        this.health = health
        this.attack = attack
        this.experience = experience
        this.defense = defense
        this.stamina = stamina
        this.healing = healing
        this.mana = mana
        resetTouchedOnNotNull()
    }
}
