/*
 * This file is generated by jOOQ.
 */
package com.motycka.edu.game.generated.tables.records


import com.motycka.edu.game.generated.tables.GameMatch

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class GameMatchRecord() : UpdatableRecordImpl<GameMatchRecord>(GameMatch.GAME_MATCH) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var challengerId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var opponentId: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var matchOutcome: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var challengerXp: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var opponentXp: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised GameMatchRecord
     */
    constructor(id: Long? = null, challengerId: Long? = null, opponentId: Long? = null, matchOutcome: String? = null, challengerXp: Int? = null, opponentXp: Int? = null): this() {
        this.id = id
        this.challengerId = challengerId
        this.opponentId = opponentId
        this.matchOutcome = matchOutcome
        this.challengerXp = challengerXp
        this.opponentXp = opponentXp
        resetTouchedOnNotNull()
    }
}
